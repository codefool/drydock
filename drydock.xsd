<?xml version="1.0" encoding="UTF-8"?>
<!-- drydock.xsd - XML schema for starship definition Distributed under GNU 
	LESSER GENERAL PUBLIC LICENSE v2.1 (http://www.gnu.org/licenses/lgpl-2.1.html) 
	This project lives at http://github.com/codefool/drydock -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
	targetNamespace="urn:drydock.xsd" xmlns:tns="urn:drydock.xsd"
	elementFormDefault="qualified">
	<xs:simpleType name="guid">
	  <xs:restriction base="xs:string">
	    <xs:pattern value="([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})|(\{[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\})"/>
	  </xs:restriction>
	</xs:simpleType>
	<!--
	Enumerations and constants 
	-->
	<xs:simpleType name="ChargingSource">
	   <xs:restriction base="xs:string">
	       <xs:enumeration value="Warp"/>
	       <xs:enumeration value="Reactor"/>
	       <xs:enumeration value="Battery"/>
	   </xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="Race">
	   <xs:restriction base="xs:string">
	       <xs:enumeration value="FED"/>
	       <xs:enumeration value="KLI"/>
           <xs:enumeration value="KAZ"/>
	   </xs:restriction>
	</xs:simpleType>
    <xs:simpleType name="Facing">
        <xs:restriction base="xs:string">
            <xs:enumeration value="A" />
            <xs:enumeration value="B" />
            <xs:enumeration value="C" />
            <xs:enumeration value="D" />
            <xs:enumeration value="E" />
            <xs:enumeration value="F" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="FiringArc">
       <xs:annotation>
           <xs:documentation>
           RF - Right Front
           R  - Right
           RR - Right Rear
           LR - Left Rear
           L  - Left
           LF - Left Front
           FA - Forward Arc (LF+RF)
           RA - Rear Arc (LR+RR)
           LS - Left Side (LF + L + LR)
           FX - (L + LF + RF + R)
           RX - (L + LR + RR + R)
           RS - Right Side (RF + R + RR)
           FH - Forward Half
           RH - Rear Half
           360 - Can fire in any direction
           </xs:documentation>
       </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="RF"/>
            <xs:enumeration value="R"/>
            <xs:enumeration value="RR"/>
            <xs:enumeration value="LR"/>
            <xs:enumeration value="L"/>
            <xs:enumeration value="LF"/>
            <xs:enumeration value="FA"/>
            <xs:enumeration value="RA"/>
            <xs:enumeration value="LS"/>
            <xs:enumeration value="FX"/>
            <xs:enumeration value="RX"/>
            <xs:enumeration value="RS"/>
            <xs:enumeration value="FH"/>
            <xs:enumeration value="RH"/>
            <xs:enumeration value="360"/>
            <xs:enumeration value="Custom"/>
        </xs:restriction>
    </xs:simpleType>
    <!--
    Reference types. 
    -->
	<xs:complexType name="ComponentRef">
	   <xs:annotation>
	       <xs:documentation>
	       A reference to a previously declared component.
	       id - the instance id of the component being referenced.
	       type - the class of system required for this reference.
	       weight - how much this efficacy of this component plays in the overall systems
	                efficacy score. 0 indicates it has an average weight.
	       backup - the id of a backup component of the same type to take the place of
	                this component should it be disabled or destroyed.
	       </xs:documentation>
	   </xs:annotation>
	    <xs:attribute name="id" type="xs:string" use="required"/>
		<xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="weight" type="xs:int" default="0"/>
        <xs:attribute name="backup" type="xs:string"/>
        <xs:attribute name="hits" type="xs:int" default="1"/>
	</xs:complexType>
	<xs:complexType name="WeaponRef">
       <xs:annotation>
           <xs:documentation>
           A reference to a previously declared weapon.
           id - the id of the weapon being referenced.
           ofType - (templates) the type of system required for this reference.
           </xs:documentation>
       </xs:annotation>
       <xs:complexContent>
	       <xs:extension base="tns:ComponentRef">
	            <xs:attribute name="firingArc" type="xs:string"/>
	       </xs:extension>
	   </xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SystemRef">
	   <xs:attribute name="id" type="xs:int"/>
       <xs:attribute name="sysId" type="xs:int"/>
       <xs:attribute name="sysName" type="xs:string"/>
	   <xs:attribute name="c1" type="xs:int" use="required"/>
	   <xs:attribute name="c2" type="xs:int" use="required"/>
       <xs:attribute name="c3" type="xs:int"/>
       <xs:attribute name="c4" type="xs:int"/>
       <xs:attribute name="c5" type="xs:int"/>
       <xs:attribute name="c6" type="xs:int"/>
	</xs:complexType>
    <xs:complexType name="RawMaterialRef">
       <xs:attribute name="id" type="xs:string"/>
       <xs:attribute name="qty" type="xs:int"/>
    </xs:complexType>
    <!--
    Class definitions 
    -->
	<xs:complexType name="Section">
		<xs:annotation>
			<xs:documentation>
				A section is a basic container of components.
				id - the unique id of this section among all others
				name - the unique name of this section (optional)
				facing - the side to which the section presents
				capacity - the maximum capicity this section can hold
				component - the list of Components in this section
				weapon - the list of Weapons in this section
				neighbors - CSV list of id's/names of any sections connected to this one.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="componentRef" type="tns:ComponentRef" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="weaponRef" type="tns:WeaponRef" minOccurs="0" maxOccurs="unbounded" />
			<xs:element name="neighbors" type="xs:string" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
		<xs:attribute name="id" type="xs:int" use="required"/>
		<xs:attribute name="name" type="xs:string" />
		<xs:attribute name="facing" type="xs:string" use="required"/>
		<xs:attribute name="capacity" type="xs:int" use="required"/>
	</xs:complexType>
	<xs:complexType name="HullClass">
		<xs:annotation>
			<xs:documentation>
				A hull is a container of sections.
				split - this hull can be split into a separate chit.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="section" type="tns:Section" minOccurs="1" maxOccurs="unbounded" />
		</xs:sequence>
		<xs:attribute name="id" type="xs:int" use="required"/>
		<xs:attribute name="name" type="xs:string"/>
		<xs:attribute name="facing" type="xs:string" use="required"/>
		<xs:attribute name="hits" type="xs:int" use="required"/>
		<xs:attribute name="split" type="xs:boolean" default="false"/>
	</xs:complexType>
	<xs:complexType name="ShipClass">
		<xs:annotation>
			<xs:documentation>
				Defines a ship class, which is one-or-more hulls and several systems.
				shield - six must exist, one for each facing.
				hull - at least one
				system - list of system specifications unique to this ship class.
				systemRef - list of system ref's for systems that exist in this ship class.
				buildable - for buildable ships, information on what requires to build.
                guid - GUID for this ship class.
                name - display name
                mnemonic - three-or-more character abbreviation to represent this ship class.
                crew - the total number of crew allotment
                race - the race this ship class originates from.				
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
		    <xs:element name="shield" type="tns:Shield" minOccurs="6" maxOccurs="6"/>
			<xs:element name="hull" type="tns:HullClass" minOccurs="1" maxOccurs="unbounded"/>
			<xs:element name="system" type="tns:SystemClass" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="systemRef" type="tns:SystemRef" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="buildable" type="tns:BuildableAttribute" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
		<xs:attribute name="guid" type="tns:guid" use="required"/>
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="mnemonic" type="xs:string" use="required"/>
		<xs:attribute name="crew" type="xs:int" use="required"/>
		<xs:attribute name="race" type="tns:Race" use="required"/>
	</xs:complexType>
	<xs:complexType name="WeaponAttribute">
       <xs:attribute name="baseDamage" type="xs:int" use="required"/>
       <xs:attribute name="addDamage" type="xs:int" default="0"/>
       <xs:attribute name="duration" type="xs:int" default="1"/>
	</xs:complexType>
	<xs:complexType name="DirectFireAttribute">
       <xs:attribute name="minRange" type="xs:int" default="1"/>
       <xs:attribute name="maxRange" type="xs:int"/>
       <xs:attribute name="entropy" type="xs:int" default="1"/>
       <xs:attribute name="chargingSource" type="xs:string" default="*"/>
       <xs:attribute name="cone" type="xs:string"/>
	</xs:complexType>
	<xs:complexType name="SeekingWeaponAttribute">
        <xs:attribute name="maxAge" type="xs:int"/>
        <xs:attribute name="initSpeed" type="xs:int"/>
        <xs:attribute name="maxSpeed" type="xs:int"/>
        <xs:attribute name="accel" type="xs:int"/>
        <xs:attribute name="turning" type="xs:int"/>
        <xs:attribute name="armTime" type="xs:int" default="1"/>
        <xs:attribute name="reloadTime" type="xs:int" default="1"/>
	</xs:complexType>
	<xs:complexType name="RequiresAttribute">
	   <xs:annotation>
	       <xs:documentation>
	           Specifies the type of component, or a specific component, a component
	           relies upon. Useful for specifying alternate linkages.
	       </xs:documentation>
	   </xs:annotation>
	   <xs:attribute name="compOfType" type="xs:string" use="required"/>
	   <xs:attribute name="compId" type="xs:string"/>
	</xs:complexType>
    <xs:complexType name="ComponentClass">
        <xs:annotation>
            <xs:documentation>
            Defines a type of component.
            raceRestriction - CSV list of races this component can appear in. Preceed race
                              guid/name/mnemonic by dash '-' to exclude a specific race.
            shipRestriction - CSV list of ships this component can appear in. Preceed ship 
                              guid/name/mnemonic by dash '-' to exclude a specific ship.
            maxOccurs - indicates the maximum number of the component that can appear in a 
                        ship. -1 means unlimited.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="chargable" type="tns:ChargingAttribute" minOccurs="0" maxOccurs="1"/>
            <xs:element name="vulnerable" type="tns:VulnerableAttribute" minOccurs="0" maxOccurs="1"/>
            <xs:element name="flamable" type="tns:FlamableAttribute" minOccurs="0" maxOccurs="1"/>
            <xs:element name="explosive" type="tns:ExplosiveAttribute" minOccurs="0" maxOccurs="1"/>
            <xs:element name="reparable" type="tns:ReparableAttribute" minOccurs="0" maxOccurs="1"/>
            <xs:element name="powersource" type="tns:PowerSourceAttribute" minOccurs="0" maxOccurs="1"/>
            <xs:element name="powersink" type="tns:PowerSinkAttribute" minOccurs="0" maxOccurs="1"/>
            <xs:element name="persistent" type="tns:PersistantAttribute" minOccurs="0" maxOccurs="1"/>
            <xs:element name="regenerative" type="tns:RegenerativeAttribute" minOccurs="0" maxOccurs="1"/>
            <xs:element name="buildable" type="tns:BuildableAttribute" minOccurs="0" maxOccurs="1"/>
            <xs:element name="invulnerable" type="tns:InvulnerableAttribute" minOccurs="0" maxOccurs="1"/>
            <xs:element name="manned" type="tns:MannedAttribute" minOccurs="0" maxOccurs="1"/>
            <xs:element name="weapon" type="tns:WeaponAttribute" minOccurs="0" maxOccurs="1"/>
            <xs:element name="directfire" type="tns:DirectFireAttribute" minOccurs="0" maxOccurs="1"/>
            <xs:element name="seeking" type="tns:SeekingWeaponAttribute" minOccurs="0" maxOccurs="1"/>
            <xs:element name="raceRestrict" type="xs:string" minOccurs="0" maxOccurs="1"/>
            <xs:element name="shipRestrict" type="xs:string" minOccurs="0" maxOccurs="1"/>
            <xs:element name="launcher" type="tns:LauncherAttribute" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="requires" type="tns:RequiresAttribute" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="guid" type="tns:guid" use="required"/>
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="mnemonic" type="xs:string" use="required"/>
        <xs:attribute name="size" type="xs:int" use="required"/>
        <xs:attribute name="maxOccurs" type="xs:int" default="-1"/>
    </xs:complexType>
    <xs:complexType name="RawMaterialClass">
       <xs:annotation>
           <xs:documentation>
           Specifies a raw material used in building units
           </xs:documentation>
       </xs:annotation>
       <xs:sequence>
            <xs:element name="flamable" type="tns:FlamableAttribute" minOccurs="0" maxOccurs="1"/>
            <xs:element name="explosive" type="tns:ExplosiveAttribute" minOccurs="0" maxOccurs="1"/>
       </xs:sequence>
       <xs:attribute name="id" type="xs:int" use="required"/>
       <xs:attribute name="name" type="xs:int" use="required"/>
       <xs:attribute name="mnemonic" type="xs:string" use="required"/>
       <xs:attribute name="cost" type="xs:int" default="1"/>
       <xs:attribute name="size" type="xs:int" default="1"/>
    </xs:complexType>
	<xs:complexType name="FlamableAttribute">
		<xs:annotation>
			<xs:documentation>
				Indicates this component is flamable.
				damage - the number of points damage the burning inflicts on the component per turn
				duration - the number of turns the component with burn
				detonate - the percentage chance per turn that the component will explode. This is only useful
				           if a ExplosiveAttribute is also specified. Otherwise nothing much happens.
				cumulate - if the percentage change is cumulative 
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="baseDamage" type="xs:int" use="required"/>
        <xs:attribute name="addDamage" type="xs:int" default="0"/>
        <xs:attribute name="duration" type="xs:int" default="1"/>
		<xs:attribute name="detonate" type="xs:int" default="0"/>
		<xs:attribute name="cumulative" type="xs:boolean" default="false"/>
	</xs:complexType>
	<xs:complexType name="ExplosionDamage">
	   <xs:sequence>
	       <xs:element name="radius" type="xs:int" default="1"/>
	       <xs:element name="decay" type="xs:int" default="1"/>
	   </xs:sequence>
	</xs:complexType>
	<xs:complexType name="ExplosiveAttribute">
		<xs:annotation>
			<xs:documentation>
				Indicates this component is explosive.
			</xs:documentation>
		</xs:annotation>
        <xs:attribute name="baseDamage" type="xs:int" use="required"/>
		<xs:attribute name="addDamage" type="xs:int" default="0"/>
	</xs:complexType>
	<xs:complexType name="ReparableAttribute">
		<xs:annotation>
			<xs:documentation>
				Indicates this component is reparable.
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="rate" type="xs:int" />
	</xs:complexType>
	<xs:complexType name="PowerSourceAttribute">
		<xs:annotation>
			<xs:documentation>
				Indicates this component is a power source.
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="rate" type="xs:int" />
	</xs:complexType>
	<xs:complexType name="PowerSinkAttribute">
		<xs:annotation>
			<xs:documentation>
				Indicates this component is a power sink.
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="rate" type="xs:int" />
	</xs:complexType>
	<xs:complexType name="PersistantAttribute">
		<xs:annotation>
			<xs:documentation>
				Indicates this component is a persistant (cannot be destroyed).
			</xs:documentation>
		</xs:annotation>
	</xs:complexType>
	<xs:complexType name="RegenerativeAttribute">
		<xs:annotation>
			<xs:documentation>
				Indicates this component is regenerative (can repair itself.)
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="rate" type="xs:int" />
	</xs:complexType>
	<xs:complexType name="BuildableAttribute">
		<xs:annotation>
			<xs:documentation>
				Indicates this component can be built.
				cost - the amount of power required to build the item
				time - the number of impulses to build the item
				rawMaterialRef - the id/string/mnemonic of a raw material type required to build the item.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
		      <xs:element name="rawMaterialRef" type="tns:RawMaterialRef" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="cost" type="xs:int" use="required"/>
        <xs:attribute name="time" type="xs:int" use="required"/>
	</xs:complexType>
	<xs:complexType name="InvulnerableAttribute">
		<xs:annotation>
			<xs:documentation>
				Indicates this component cannot be damaged.
			</xs:documentation>
		</xs:annotation>
        <xs:attribute name="conflictsWith" type="xs:string" default="VulnerableAttribute"/>
	</xs:complexType>
    <xs:complexType name="MannedAttribute">
        <xs:annotation>
            <xs:documentation>
                Indicates this component must be manned.
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="minCrew" type="xs:int" use="required"/>
        <xs:attribute name="maxCrew" type="xs:int" use="required"/>
    </xs:complexType>
    <xs:complexType name="LauncherAttribute">
        <xs:annotation>
            <xs:documentation>
                Indicates this component can spawn other chit types
                spawnType - the class of chit to be spawned
                seriesNo - Base id number for the spawn chits. The id number of the
                           first chit will be seriesNo + 1, the second seriesNo +2, 
                           etc. 
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="spawnType" type="xs:string" use="required"/>
        <xs:attribute name="seriesNo" type="xs:int" use="required"/>
        <xs:attribute name="capacity" type="xs:int" default="1"/>
        <xs:attribute name="factory" type="xs:boolean" default="false"/>
    </xs:complexType>
    <xs:complexType name="ChargingAttribute">
       <xs:annotation>
           <xs:documentation>
           Specifies charging metrics for a component.
           cost - the amount of power required to charge the weapon
           time - the number of impulses required to charge the weapon
           hold - the amount of power required to hold the charged weapon
           maxHold - the maximum number of impulses the charged weapon may be held
           overCost - the amount of (additional) power required to 
                          overload the component
           overTime - the amount of (additional) time required to 
                          overload the component
           overHoldCost - the amount of (additional) power required to 
                              hold the overloaded component, once charged
           overMaxHold - the maximum number of impulses the overloaded
                             component may be held once charged.
           </xs:documentation>
       </xs:annotation>
        <xs:attribute name="cost" type="xs:int" use="required"/>
        <xs:attribute name="time" type="xs:int" use="required"/>
        <xs:attribute name="hold" type="xs:int" default="0"/>
        <xs:attribute name="maxHold" type="xs:int" default="0"/>
        <xs:attribute name="overCost" type="xs:int" default="0"/>
        <xs:attribute name="overTime" type="xs:int" default="0"/>
        <xs:attribute name="overHold" type="xs:int" default="0"/>
        <xs:attribute name="overMaxHold" type="xs:int" default="0"/>
    </xs:complexType>
	<xs:complexType name="SystemComponentClass">
		<xs:annotation>
			<xs:documentation>
				A component that is part of a section.
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="id" type="xs:integer" />
		<xs:attribute name="weight" type="xs:integer" default="-1" />
	</xs:complexType>
	<xs:complexType name="SystemClass">
		<xs:annotation>
			<xs:documentation>
				A system is a collection of components that together provide some
				function.
				The part list contains of the guids of the components that make up the
				system and/or a list of component names.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="componentRef" type="tns:ComponentRef" minOccurs="1" maxOccurs="unbounded" />
		</xs:sequence>
		<xs:attribute name="id" type="xs:int" use="required"/>
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="template" type="xs:boolean" default="false"/>
	</xs:complexType>
	<xs:complexType name="VulnerableAttribute">
		<xs:annotation>
			<xs:documentation>
				disable = the amount of damage to disable the component
				destroy = the amount of damage to destroy the component (max damage)
				repairRate = the amount of damage that can be repaired per cycle.
				efficacyFactor = the weight of damage on the component's efficacy
				                 rating.
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="disable" type="xs:int" />
		<xs:attribute name="destroy" type="xs:int" />
		<xs:attribute name="repairRate" type="xs:int" default="0" />
		<xs:attribute name="efficacyFactor" type="xs:int" default="1" />
		<xs:attribute name="conflictsWith" type="xs:string" default="InvulnerableAttribute"/>
	</xs:complexType>
	<xs:complexType name="ComponentContainerClass">
		<xs:sequence>
			<xs:element name="component" type="tns:ComponentClass" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
		<xs:attribute name="capacity" type="xs:int" use="required"/>
	</xs:complexType>
	<xs:complexType name="CargoBayClass">
        <xs:annotation>
            <xs:documentation>
                Defines a cargo bay for a ship. The contents of a cargo bay are not connected, not 
                powered, or otherwise active. They can, however, be damaged and destroyed.
            </xs:documentation>
        </xs:annotation>
       <xs:complexContent>
		   <xs:extension base="tns:ComponentContainerClass">
		   </xs:extension>
       </xs:complexContent>
	</xs:complexType>
    <xs:complexType name="ShuttleBayClass">
        <xs:annotation>
            <xs:documentation>
                Defines a shuttle bay for a ship. 
            </xs:documentation>
        </xs:annotation>
       <xs:complexContent>
           <xs:extension base="tns:ComponentContainerClass">
           </xs:extension>
       </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="MissionClass">
        <xs:annotation>
            <xs:documentation>
                Defines a mission type for a ships, both player and non-player. 
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
        </xs:sequence>
        <xs:attribute name="guid" type="tns:guid" use="required"/>
        <xs:attribute name="name" type="xs:string" use="required"/>
    </xs:complexType>
	<xs:complexType name="Shield">
		<xs:annotation>
			<xs:documentation>
			   The shield force field. Each ship has six shields, each protecting a different
			   face. Each shield 
			    facing    - the facing this shield protects
			    strength  - the amount of shield strength
			    generator - the id/name of the shield generator for this shield.
			    regen     - the amount of strength that can be regenned per impulse (-1 cannot regen)
			    overload  - the overloaded amount of strength (-1 cannot be overloaded)
			    overCost  - the amount of additional energy required per overload point of strength
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="facing" type="tns:Facing" use="required"/>
		<xs:attribute name="strength" type="xs:int" use="required"/>
        <xs:attribute name="generator" type="xs:string" use="required"/>
		<xs:attribute name="regen" type="xs:int" default="-1"/>
		<xs:attribute name="overload" type="xs:int" default="-1"/>
		<xs:attribute name="overCost" type="xs:int"/>
	</xs:complexType>
	<xs:complexType name="RaceClass">
	   <xs:annotation>
	       <xs:documentation>
	           Information about races.
	           enemy - guid/name/mnemonic of a race at war with this race
	           ally - guid/name/mnemonic of a race at peace with this race
	       </xs:documentation>
	   </xs:annotation>
	   <xs:sequence>
	       <xs:element name="enemy" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
	       <xs:element name="ally" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
	   </xs:sequence>
	   <xs:attribute name="guid" type="tns:guid" use="required"/>
	   <xs:attribute name="name" type="xs:string" use="required"/>
	   <xs:attribute name="mnemonic" type="xs:string" use="required"/>
	   <xs:attribute name="alignment" type="xs:string" default="neutral"/>
	</xs:complexType>
	
	<!--  common system types -->
	<xs:complexType name="phaser-I">
	    <xs:annotation>
	        <xs:documentation>
	            Basic template for a phaser type I system. Requires the following:
	            id - identifies this system from all others in the ship class
	            fireControl - the id of the fire control system
	            phaser1 - the id of the actual phaser-I emmitter.
	            conduit - the id of the power conduit for the phaser.
	            power - the power supply of the phaser
	            auxpower - auxilary power supply (optional)
	            tirtpower - tirtiary power supply (optional)
	        </xs:documentation>
	    </xs:annotation>
	    <xs:attribute name="id" type="xs:string" use="required"/>
	    <xs:attribute name="fireControl" type="xs:string" use="required"/>
	    <xs:attribute name="phaser1" type="xs:string" use="required"/>
	    <xs:attribute name="conduit" type="xs:string" use="required"/>
	    <xs:attribute name="power" type="xs:string" use="required"/>
	    <xs:attribute name="auxpower" type="xs:string" use="required"/>
	    <xs:attribute name="tirtpower" type="xs:string" use="required"/>
	</xs:complexType>
	
	<!-- DryDock Document --> 	
	<xs:complexType name="DryDock">
		<xs:sequence>
			<xs:element name="ship" type="tns:ShipClass" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="component" type="tns:ComponentClass" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="system" type="tns:SystemClass" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="mission" type="tns:MissionClass" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="race" type="tns:RaceClass" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="guid" type="tns:guid" default="0"/>
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="version" type="xs:string" use="required"/>
		<xs:attribute name="author" type="xs:string"/>
		<xs:attribute name="copyright" type="xs:string"/>
		<xs:attribute name="license" type="xs:string"/>
		<xs:attribute name="home" type="xs:string"/>
	</xs:complexType>

	<xs:element name="drydock" type="tns:DryDock" />
</xs:schema>